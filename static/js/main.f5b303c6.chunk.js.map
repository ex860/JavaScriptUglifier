{"version":3,"sources":["jsUglifier.js","index.js"],"names":["numberMapping","basis","alphabetMapping","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","E","F","I","N","O","R","S","bufferRelatedAlphabetMapping","C","D","G","H","J","K","L","M","P","Q","T","U","V","W","X","Y","Z","btoaRelatedAlphabetMapping","NODEJS","BROWSER","PRINT_CHECKING","env","window","console","log","replaceNumber","inputStr","replace","match","Number","split","map","join","replaceBasis","basisKey","uglify","char","printCheckingResult","key","result","eval","convertReturnNeededCharacter","string","convertedCharArray","charVal","push","num","letter","base64AlphabetMapping","characterMapping","converter","inputArr","charCode","charCodeAt","uglifiedInputArr","Main","useState","value","setValue","uglyValue","setUglyValue","showCpExe","setShowCpExe","useEffect","document","getElementById","addEventListener","preventDefault","start","this","selectionStart","end","selectionEnd","substring","handleChange","target","uglifiy","copyUglyValue","querySelector","select","execCommand","blur","execute","err","error","className","id","onChange","placeholder","type","onClick","readOnly","ReactDOM","render"],"mappings":"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","file":"static/js/main.f5b303c6.chunk.js","sourcesContent":["const numberMapping = {\r\n    0: '+[]',\r\n    1: '+!![]',\r\n\r\n    // 1+1\r\n    2: '+!![]+ +!![]',\r\n\r\n    // 1+1+1\r\n    3: '+!![]+ +!![]+ +!![]',\r\n\r\n    // 1<<2\r\n    4: '+!![]<<+!![]+ +!![]',\r\n\r\n    // 4+1\r\n    5: '(+!![]<<+!![]+ +!![])+ +!![]',\r\n\r\n    // 3<<1\r\n    6: '+!![]+ +!![]+ +!![]<<+!![]',\r\n\r\n    // 6+1\r\n    7: '(+!![]+ +!![]+ +!![]<<+!![])+ +!![]',\r\n\r\n    // 1<<3\r\n    8: '+!![]<<+!![]+ +!![]+ +!![]',\r\n\r\n    // 8+1\r\n    9: '(+!![]<<+!![]+ +!![]+ +!![])+ +!![]',\r\n}\r\n\r\nconst basis = {\r\n    'true': '!![]',\r\n    'false': '![]',\r\n    'undefined': '{}[\"\"]',\r\n    '\"[object Object]\"': '\"\"+{}',\r\n    'NaN': '\"\"/\"\"+\"\"',\r\n    'Infinity': '+(+!![]+(![]+\"\")[+!![]<<+!![]+ +!![]]+ +!![]+\"\"+ +[]+ +[]+ +[])', // 1e1000\r\n    '\"constructor\"': '(\"\"+{})[(+!![]<<+!![]+ +!![])+ +!![]]+(\"\"+{})[+!![]]+({}[\"\"]+\"\")[+!![]]+(![]+\"\")[+!![]+ +!![]+ +!![]]+(!![]+\"\")[+[]]+(!![]+\"\")[+!![]]+({}[\"\"]+\"\")[+[]]+(\"\"+{})[(+!![]<<+!![]+ +!![])+ +!![]]+(!![]+\"\")[+[]]+(\"\"+{})[+!![]]+(!![]+\"\")[+!![]]',\r\n    '\"toString\"': '(!![]+\"\")[+[]]+(\"\"+{})[+!![]]+(\"\"[(\"\"+{})[(+!![]<<+!![]+ +!![])+ +!![]]+(\"\"+{})[+!![]]+({}[\"\"]+\"\")[+!![]]+(![]+\"\")[+!![]+ +!![]+ +!![]]+(!![]+\"\")[+[]]+(!![]+\"\")[+!![]]+({}[\"\"]+\"\")[+[]]+(\"\"+{})[(+!![]<<+!![]+ +!![])+ +!![]]+(!![]+\"\")[+[]]+(\"\"+{})[+!![]]+(!![]+\"\")[+!![]]]+\"\")[(+!![]<<+!![]+ +!![]+ +!![])+ +!![]]+(!![]+\"\")[+[]]+(!![]+\"\")[+!![]]+({}[\"\"]+\"\")[(+!![]<<+!![]+ +!![])+ +!![]]+({}[\"\"]+\"\")[+!![]]+(\"\"[(\"\"+{})[(+!![]<<+!![]+ +!![])+ +!![]]+(\"\"+{})[+!![]]+({}[\"\"]+\"\")[+!![]]+(![]+\"\")[+!![]+ +!![]+ +!![]]+(!![]+\"\")[+[]]+(!![]+\"\")[+!![]]+({}[\"\"]+\"\")[+[]]+(\"\"+{})[(+!![]<<+!![]+ +!![])+ +!![]]+(!![]+\"\")[+[]]+(\"\"+{})[+!![]]+(!![]+\"\")[+!![]]]+\"\")[(+!![])+\"\"+(+!![]<<+!![]+ +!![])]',\r\n}\r\n\r\nconst alphabetMapping = {\r\n    a: '(false+\"\")[1]',\r\n    b: '(\"[object Object]\")[2]',\r\n    c: '(\"[object Object]\")[5]',\r\n    d: '(undefined+\"\")[2]',\r\n    e: '(false+\"\")[4]',\r\n    f: '(false+\"\")[0]',\r\n    g: '(\"\"[\"constructor\"]+\"\")[14]',\r\n    h: '(+(17))[\"toString\"](36)',\r\n    i: '(undefined+\"\")[5]',\r\n    j: '(\"[object Object]\")[3]',\r\n    k: '(+(20))[\"toString\"](36)',\r\n    l: '(false+\"\")[2]',\r\n    m: '((+[])[\"constructor\"]+\"\")[11]',\r\n    n: '(undefined+\"\")[1]',\r\n    o: '(\"[object Object]\")[1]',\r\n    p: '(/./[\"constructor\"]+\"\")[14]',\r\n    q: '(+(26))[\"toString\"](36)',\r\n    r: '(true+\"\")[1]',\r\n    s: '(false+\"\")[3]',\r\n    t: '(true+\"\")[0]',\r\n    u: '(undefined+\"\")[0]',\r\n    v: '(\"\"[\"constructor\"]+\"\")[25]',\r\n    w: '(+(32))[\"toString\"](36)',\r\n    x: '(/./[\"constructor\"]+\"\")[13]',\r\n    y: '(Infinity+\"\")[7]',\r\n    z: '(+(35))[\"toString\"](36)',\r\n    A: '([][\"constructor\"]+\"\")[9]',\r\n    B: '((![])[\"constructor\"]+\"\")[9]',\r\n    E: '(/./[\"constructor\"]+\"\")[12]',\r\n    F: '((()=>{})[\"constructor\"]+\"\")[9]',\r\n    I: '(Infinity+\"\")[0]',\r\n    N: '(NaN+\"\")[0]',\r\n    O: '(\"[object Object]\")[8]',\r\n    R: '(/./[\"constructor\"]+\"\")[9]',\r\n    S: '(\"\"[\"constructor\"]+\"\")[9]',\r\n}\r\n\r\nconst bufferRelatedAlphabetMapping = {\r\n    C: 'Buffer(\",,\")[\"toString\"](\"base\"+64)[1]',\r\n    D: 'Buffer(\",=\")[\"toString\"](\"base\"+64)[1]',\r\n    G: 'Buffer(\",a\")[\"toString\"](\"base\"+64)[1]',\r\n    H: 'Buffer(\",x\")[\"toString\"](\"base\"+64)[1]',\r\n    J: 'Buffer(\"$\")[\"toString\"](\"base\"+64)[0]',\r\n    K: 'Buffer(\"(\")[\"toString\"](\"base\"+64)[0]',\r\n    L: 'Buffer(\",\")[\"toString\"](\"base\"+64)[0]',\r\n    M: 'Buffer(\"0\")[\"toString\"](\"base\"+64)[0]',\r\n    P: 'Buffer(\"<\")[\"toString\"](\"base\"+64)[0]',\r\n    Q: 'Buffer(\"1\")[\"toString\"](\"base\"+64)[1]',\r\n    T: 'Buffer(\"10\")[\"toString\"](\"base\"+64)[1]',\r\n    U: 'Buffer(\"15\")[\"toString\"](\"base\"+64)[2]',\r\n    V: 'Buffer(\"euA\")[\"toString\"](\"base\"+64)[2]',\r\n    W: 'Buffer(\"aa\")[\"toString\"](\"base\"+64)[1]',\r\n    X: 'Buffer(\"_\")[\"toString\"](\"base\"+64)[0]',\r\n    Y: 'Buffer(\"16\")[\"toString\"](\"base\"+64)[2]',\r\n    Z: 'Buffer(\"d\")[\"toString\"](\"base\"+64)[0]',\r\n}\r\n\r\nconst btoaRelatedAlphabetMapping = {\r\n    C: 'btoa(\",,\")[1]',\r\n    D: 'btoa(\",=\")[1]',\r\n    G: 'btoa(\",a\")[1]',\r\n    H: 'btoa(\",x\")[1]',\r\n    J: 'btoa(\"$\")[0]',\r\n    K: 'btoa(\"(\")[0]',\r\n    L: 'btoa(\",\")[0]',\r\n    M: 'btoa(\"0\")[0]',\r\n    P: 'btoa(\"<\")[0]',\r\n    Q: 'btoa(\"1\")[1]',\r\n    T: 'btoa(\"10\")[1]',\r\n    U: 'btoa(\"15\")[2]',\r\n    V: 'btoa(\"euA\")[2]',\r\n    W: 'btoa(\"aa\")[1]',\r\n    X: 'btoa(\"_\")[0]',\r\n    Y: 'btoa(\"16\")[2]',\r\n    Z: 'btoa(\"d\")[0]',\r\n}\r\n\r\nconst NODEJS = 0\r\nconst BROWSER = 1\r\n\r\n// const PRINT_CHECKING = true\r\nconst PRINT_CHECKING = false\r\n\r\nlet env = null\r\ntry {\r\n    if (this === window) {\r\n        env = BROWSER\r\n        console.log('Environment: Web Browser')\r\n    }\r\n} catch {\r\n    env = NODEJS\r\n    console.log('Environment: Node.js')\r\n}\r\n\r\nconst replaceNumber = (inputStr) => {\r\n    return inputStr.replace(/[0-9]+/g, (match) => {\r\n        if (Number(match) >= 10) {\r\n            return match.split('').map(m => `(${numberMapping[m]})`).join('+\"\"+')\r\n        }\r\n        return numberMapping[match]\r\n    })\r\n}\r\n\r\nconst replaceBasis = (inputStr) => {\r\n    for (const basisKey in basis) {\r\n        inputStr = inputStr.replace(basisKey, () => {\r\n            return basis[basisKey]\r\n        })\r\n    }\r\n    return inputStr\r\n}\r\n\r\nconst uglify = (inputStr) => {\r\n    return inputStr.split('').map(char => alphabetMapping[char]).join('+');\r\n}\r\n\r\nconst printCheckingResult = (key, result) => {\r\n    if (!PRINT_CHECKING) {\r\n        return\r\n    }\r\n    try {\r\n        if (eval(result) === key) {\r\n            if (env === NODEJS) {\r\n                console.log(`${key}: \\x1b[1;32m%s\\x1b[0m`, 'Correct!')\r\n            } else {\r\n                console.log(`${key}: %cCorrect!`, 'background-color:green;color:white;')\r\n            }\r\n        } else {\r\n            if (env === NODEJS) {\r\n                console.log(`${key}: \\x1b[1;31m%s\\x1b[0m`, 'Wrong!')\r\n            } else {\r\n                console.log(`${key}: %Wrong!`, 'background-color:red;color:white;')\r\n            }\r\n        }\r\n    } catch {\r\n        if (env === NODEJS) {\r\n            console.log(`${key}: \\x1b[1;31m%s\\x1b[0m`, 'Wrong!')\r\n        } else {\r\n            console.log(`${key}: %Wrong!`, 'background-color:red;color:white;')\r\n        }\r\n    }\r\n}\r\n\r\nconst convertReturnNeededCharacter = (string, alphabetMapping) => {\r\n    const convertedCharArray = []\r\n    for (const char of string) {\r\n        let charVal = null\r\n        if (alphabetMapping[char]) {\r\n            charVal = alphabetMapping[char]\r\n        } else if (numberMapping[char]) {\r\n            charVal = `(${numberMapping[char]})`\r\n        } else {\r\n            if (char === '\"') {\r\n                charVal = '\\'\"\\''\r\n            } else {\r\n                charVal = `\"${char}\"`\r\n            }\r\n        }\r\n        convertedCharArray.push(charVal)\r\n    }\r\n    return `(()=>{})[${basis['\"constructor\"']}](${uglify('return')}+\" \"+${convertedCharArray.join('+')})()`\r\n}\r\n\r\nfor (const num in numberMapping) {\r\n    printCheckingResult(Number(num), numberMapping[num])\r\n}\r\n\r\nfor (const letter in alphabetMapping) {\r\n    alphabetMapping[letter] = replaceNumber(alphabetMapping[letter])\r\n    alphabetMapping[letter] = replaceBasis(alphabetMapping[letter])\r\n    printCheckingResult(letter, alphabetMapping[letter])\r\n}\r\n\r\nlet base64AlphabetMapping = {}\r\nif (env === NODEJS) {\r\n    base64AlphabetMapping = bufferRelatedAlphabetMapping\r\n} else {\r\n    base64AlphabetMapping = btoaRelatedAlphabetMapping\r\n}\r\n\r\n\r\n\r\nfor (const letter in base64AlphabetMapping) {\r\n    const result = convertReturnNeededCharacter(base64AlphabetMapping[letter], alphabetMapping)\r\n    base64AlphabetMapping[letter] = result\r\n    printCheckingResult(letter, result)\r\n}\r\n\r\nconst characterMapping = { ...alphabetMapping, ...base64AlphabetMapping }\r\n\r\n// const inputStr = 'console.log(\"\\t\")'\r\n// backtick 不需要跳脫，範例如下\r\n// const b = 'let a = 1;console.log(`${a}`)'\r\n// let inputStr = `${b}`\r\n\r\nconst converter = (inputStr) => {\r\n    inputStr = inputStr.replace(/(\\{|,)[\\n ]+/g, '$1')\r\n    inputStr = inputStr.replace(/[\\n ]+\\}/g, () => '}')\r\n    inputStr = inputStr.replace(/\\n/g, () => ';')\r\n    const inputArr = []\r\n    // Replace all the alphabet and numbers\r\n    for (const char of inputStr) {\r\n        let charVal = null\r\n        if (characterMapping[char]) {\r\n            charVal = characterMapping[char]\r\n        } else if (numberMapping[char]) {\r\n            charVal = `(${numberMapping[char]})`\r\n        } else {\r\n            const charCode = char.charCodeAt()\r\n            if (char === '\"') {\r\n                charVal = '\\'\"\\''\r\n            } else if (char === '\\\\') {\r\n                charVal = '\"\\\\\\\\\"'\r\n            } else if (charCode >= 256) {\r\n                charVal = convertReturnNeededCharacter(`String[\"fromCharCode\"](${charCode})`, characterMapping)\r\n            } else {\r\n                charVal = `\"${char}\"`\r\n            }\r\n        }\r\n        inputArr.push(charVal)\r\n    }\r\n    const uglifiedInputArr = inputArr.join('+')\r\n    // console.log(uglifiedInputArr)\r\n    // console.log(eval(`(()=>{})[${basis['\"constructor\"']}](${uglifiedInputArr})()`), '\\n')\r\n    return `(()=>{})[${basis['\"constructor\"']}](${uglifiedInputArr})()`\r\n}\r\n\r\nexport default converter","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport converter from './jsUglifier'\r\n\r\nconst Main = () => {\r\n  const [value, setValue] = useState('')\r\n  const [uglyValue, setUglyValue] = useState('')\r\n  const [showCpExe, setShowCpExe] = useState(false)\r\n\r\n  useEffect(() => {\r\n    document.getElementById('ugly-input').addEventListener('keydown', function(e) {\r\n      if (e.key === 'Tab') {\r\n        e.preventDefault();\r\n        let start = this.selectionStart;\r\n        const end = this.selectionEnd;\r\n    \r\n        // set textarea value to: text before caret + tab + text after caret\r\n        this.value = this.value.substring(0, start) + \"\\t\" + this.value.substring(end);\r\n    \r\n        // put caret at right position again\r\n        this.selectionStart = this.selectionEnd = start + 1;\r\n      }\r\n    });\r\n  }, [])\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n  const uglifiy = () => {\r\n    if (value) {\r\n      setUglyValue(converter(value))\r\n      setShowCpExe(true)\r\n    }\r\n  }\r\n\r\n  const copyUglyValue = () => {\r\n    document.querySelector('#ugly-output').select()\r\n    document.execCommand(\"copy\");\r\n    document.querySelector('#ugly-output').blur()\r\n  }\r\n\r\n  const execute = () => {\r\n    try {\r\n      (() => { eval(uglyValue) })()\r\n    } catch (err) { console.error(err) }\r\n  }\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">\r\n        <span className=\"javascript\">JavaScript</span>\r\n        <span className=\"uglifier\">Uglifier</span>\r\n      </h1>\r\n      <div className=\"textarea-div\">\r\n        <textarea id=\"ugly-input\" value={value} onChange={handleChange} placeholder=\"Enter your JavaScript code here...\" />\r\n      </div>\r\n      <div className=\"uglifiy-btn-div\">\r\n        <button type=\"button\" onClick={uglifiy}>Uglify</button>\r\n      </div>\r\n      {showCpExe && (\r\n        <div>\r\n          <div className=\"textarea-div\">\r\n            <textarea id=\"ugly-output\" value={uglyValue} readOnly />\r\n          </div>\r\n          <div className=\"uglifiy-btn-div\">\r\n            <button type=\"button\" onClick={copyUglyValue}>Copy</button>\r\n            <button type=\"button\" onClick={execute}>Execute</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Main />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}